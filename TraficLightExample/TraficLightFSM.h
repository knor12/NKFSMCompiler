/*
*this file is auto generated by NKCompiler, do not edit manualy
*@file TraficLightFSM.h
*@date 2022-12-12
*@author n.kessa
*@brief state machine TraficLightFSM FSM code
*/


#ifndef  TraficLightFSM_H
#define  TraficLightFSM_H


#ifdef __cplusplus 
extern "C" 
{ 
#endif		/* __cplusplus */ 
/*definition of all states*/
typedef enum 
{
    TraficLight_errorState,
    TraficLight_init,
    TraficLight_warmup,
    TraficLight_red_Lightoff,
    TraficLight_red_redOn_redOnL1,
    TraficLight_red_redOn_redOnL2,
    TraficLight_red_preinit,
}FSMTraficLight_State_t;



/*definition of all events*/
typedef enum 
{
    on,
    any,
    off,
    timeOut1,
    timeOut10,
    timeOut2,
    timeOut3,
    timeOut40,
    timeOut100,
}FSMTraficLight_event_t;


/*definition of state structure*/
struct TraficLightFSM 
{
   FSMTraficLight_State_t state;
   int transitions; 
 /*incremented every time a transition happens*/
};
/*initialization function*/
void TraficLightFSM_Init(struct TraficLightFSM * fsm);


/*events*/
int TraficLightFSM_on(struct TraficLightFSM * fsm, void * o);
int TraficLightFSM_any(struct TraficLightFSM * fsm, void * o);
int TraficLightFSM_off(struct TraficLightFSM * fsm, void * o);
int TraficLightFSM_timeOut1(struct TraficLightFSM * fsm, void * o);
int TraficLightFSM_timeOut10(struct TraficLightFSM * fsm, void * o);
int TraficLightFSM_timeOut2(struct TraficLightFSM * fsm, void * o);
int TraficLightFSM_timeOut3(struct TraficLightFSM * fsm, void * o);
int TraficLightFSM_timeOut40(struct TraficLightFSM * fsm, void * o);
int TraficLightFSM_timeOut100(struct TraficLightFSM * fsm, void * o);

#ifdef __cplusplus
}
#endif		/* __cplusplus */
#endif /*TraficLightFSM_H*/